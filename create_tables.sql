-- ==============================
-- 1. Customer
-- ==============================
CREATE TABLE CUSTOMER (
    CUSTOMER_ID     BIGINT NOT NULL,
    FIRST_NAME      VARCHAR(50) NOT NULL,
    LAST_NAME       VARCHAR(50) NOT NULL,
    DNI             VARCHAR(10) NOT NULL,
    EMAIL           VARCHAR(150) NOT NULL,
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CUSTOMER PRIMARY KEY (CUSTOMER_ID),
    CONSTRAINT UQ_CUSTOMER_EMAIL UNIQUE (EMAIL),
    CONSTRAINT UQ_CUSTOMER_DNI UNIQUE (DNI),
    CONSTRAINT CK_CUSTOMER_DNI CHECK (DNI ~ '^[0-9]{7,8}$')
);


-- ==============================
-- 2. Address
-- ==============================
CREATE TABLE ADDRESS (
    ADDRESS_ID      BIGINT NOT NULL,
    CUSTOMER_ID     BIGINT NOT NULL,
    STREET          VARCHAR(30) NOT NULL,
    NUMBER          VARCHAR(20) NOT NULL, /* podria ser nulo? */
    CITY            VARCHAR(30) NOT NULL,
    STATE           VARCHAR(50),
    COUNTRY         VARCHAR(30) NOT NULL,
    ZIP_CODE        VARCHAR(10),
    IS_PRIMARY      BOOLEAN DEFAULT FALSE, /* para saber si es la direccion principal actual, puede variar */
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ADDRESS PRIMARY KEY (ADDRESS_ID), /* no pongo PK compuesta porque 2 personas pueden tener la misma direc */
    CONSTRAINT FK_ADDRESS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
    CONSTRAINT CK_ADDRESS_ZIP CHECK (ZIP_CODE ~ '^[0-9]{4,10}$')
);

-- ==============================
-- 3. Phone
-- ==============================
CREATE TABLE PHONE (
    PHONE_ID        BIGINT NOT NULL,
    CUSTOMER_ID     BIGINT NOT NULL,
    PHONE_NUMBER    VARCHAR(20) NOT NULL,
    TYPE            VARCHAR(20),
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_PHONE PRIMARY KEY (PHONE_ID),
    CONSTRAINT UQ_PHONE_CUSTOMER UNIQUE (CUSTOMER_ID, PHONE_NUMBER),
    CONSTRAINT CK_PHONE_TYPE CHECK (TYPE IN ('MOBILE','HOME','WORK')),
    CONSTRAINT CK_PHONE_NUMBER CHECK (PHONE_NUMBER ~ '^[0-9]{8,15}$'),
    CONSTRAINT FK_PHONE_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
);

-- ==============================
-- 4. Category
-- ==============================
CREATE TABLE CATEGORY (
    CATEGORY_ID     BIGINT NOT NULL,
    NAME            VARCHAR(60) NOT NULL, /* podria ser pk */
    DESCRIPTION     VARCHAR(100) NOT NULL,
    PATH            VARCHAR(500),
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CATEGORY PRIMARY KEY (CATEGORY_ID)
);

-- ==============================
-- 5. Item
-- ==============================
CREATE TABLE ITEM (
    ITEM_ID         BIGINT NOT NULL,
    SELLER_ID       BIGINT NOT NULL,
    CATEGORY_ID     BIGINT NOT NULL,
    TITLE           VARCHAR(255) NOT NULL, /* unique? */
    DESCRIPTION     TEXT,
    PRICE           DECIMAL(12,2) NOT NULL,
    STATUS          VARCHAR(50),
    PUBLISHED_AT    DATE, /* cuando se publica al marketplace el item */
    END_DATE        DATE,
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP, /* cuando se crea que puede no ser igual a cuando se publica */
    UPDATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ITEM PRIMARY KEY (ITEM_ID),
    CONSTRAINT FK_ITEM_SELLER FOREIGN KEY (SELLER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
    CONSTRAINT FK_ITEM_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID),
    CONSTRAINT CK_ITEM_PRICE CHECK (PRICE >= 0)
);

-- ==============================
-- 6. Order
-- ==============================
CREATE TABLE ORDER (
    ORDER_ID        BIGINT NOT NULL,
    BUYER_ID        BIGINT NOT NULL,
    ITEM_ID         BIGINT NOT NULL,
    QUANTITY        INT NOT NULL,
    UNIT_PRICE      DECIMAL(12,2) NOT NULL,
    STATUS          VARCHAR(20) DEFAULT 'CREATED',
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID),
    CONSTRAINT FK_ORDER_BUYER FOREIGN KEY (BUYER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
    CONSTRAINT FK_ORDER_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ITEM_ID),
    CONSTRAINT CK_ORDER_QTY CHECK (QUANTITY > 0),
    CONSTRAINT CK_ORDER_PRICE CHECK (UNIT_PRICE >= 0),
    CONSTRAINT CK_ORDER_STATUS CHECK (STATUS IN ('CREATED','PENDING','PROCESSING','SHIPPED','DELIVERED','RETURNED','CANCELLED'))
);